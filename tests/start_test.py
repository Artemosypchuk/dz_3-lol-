if __name__ == "__main__":
    checker_answer()

test_list = ("Что выведет следующий код, при его исполнении? Используется Python 3.x.:\n--------print(type(1 / 2))--------\n1:class \'int\'\n2:	class \'number\'\n3:class \'float\'\n4:class \'double\'\n5:class \'tuple\'", "Что выведет следующий код?\n-------d = lambda p: p * 2\nt = lambda p: p * 3\nx = 2\nx = d(x)\nx = t(x)\nx = d(x)\nprint(x)-------\n1: \'7\'\n2: \'12\'\n3: \'24\'\n4: \'36\'\n5: \'48\'", "Что выведет следующий фрагмент кода?\n --------x = 4.5\ny = 2\nprint(x // y)-------\n1: \'2.0\'\n2: \'2.25\'\n3: \'9.0\'\n4: \'20.25\'\n5: \'21\'", "Что делает следующий код?\n-------def a(b, c, d): pass\n1: \'	Определяет список и инициализирует его.\'\n2: \'	Определяет функцию, которая ничего не делает.\'\n3: \'	Определяет функцию, которая передает параметры.\'\n4: \'Определяет пустой класс.\'",
             "Что будет напечатано?\n-------kvps  = \"user\",\"bill\", \"password\",\"hillary\"}\nprint(kvps[\'password\'])\n1: user\n2: bill\n3: password\n4: hillary\n5:	Ничего. TypeError.", "Что выведет следующая программа?\n-------a = [1,2,3,None,(),[],]\nprint(len(a))-------\n1: Syntax Error\n2: 4\n3: 5\n4: 6\n5: 7", "Что будет напечатано?\n-------x = True\ny = False\nz = False\nif not x or y:\nprint(1)\nelif not x or not y and z:\nprint(2)\nelif not x or y or not y and x:\nprint(3)\nelse:\nprint(4)-------\n1: 1\n2: 2\n3: 3\n4: 4", "Что будет напечатано?\n-------name = \"snow storm\"\nprint(\"%s\" \% name[6:8])\n1: st\n2: sto\n3: to\n4: Syntax Error")
# test_list = {"qwestion1": "answer1", "qwestion2": "answer2", "qwestion3": "answer3", "qwestion4": "answer4", "qwestion5": "answer5", "qwestion6": "answer6", "qwestion7": "answer7", "qwestion8": "answer8", "qwestion9": "answer9", "qwestion10": "answer10", "qwestion11": "answer11", "qwestion12": "answer12", "qwestion13": "answer13", "qwestion14": "answer14", "qwestion15": "answer15", "qwestion16": "answer16", "qwestion17": "answer17", "qwestion18": "answer18", "qwestion19": "answer19", "qwestion20": "answer20", "qwestion21": "answer21", "qwestion22": "answer22", "qwestion23": "answer23", "qwestion24": "answer24", "qwestion25": "answer25",
#              "qwestion26": "answer26", "qwestion27": "answer27", "qwestion28": "answer28", "qwestion29": "answer29", "qwestion30": "answer30", "qwestion31": "answer31", "qwestion32": "answer32", "qwestion33": "answer33", "qwestion34": "answer34", "qwestion35": "answer35", "qwestion36": "answer36", "qwestion37": "answer37", "qwestion38": "answer38", "qwestion39": "answer39", "qwestion40": "answer40", "qwestion41": "answer41", "qwestion42": "answer42", "qwestion43": "answer43", "qwestion44": "answer44", "qwestion45": "answer45", "qwestion46": "answer46", "qwestion47": "answer47", "qwestion48": "answer48", "qwestion49": "answer49", "qwestion50": "answer50", }

answer = [3, 3, 1, 2, 5, 4, 3, 2]
